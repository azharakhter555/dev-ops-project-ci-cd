version: 0.2

env:
  variables:
    Project: "azharakhter555"  # Replace "azharakhter555" with your actual project key
    Organization: "azharakhter555"  # Replace "azharakhter555" with your actual organization key
    HOST: "https://sonarcloud.io"  # Replace "https://sonarcloud.io" with your SonarCloud host URL
    LOGIN: "dfb96a75ff67413791f60ca1b049976beccfaec6"  # Replace "dfb96a75ff67413791f60ca1b049976beccfaec6" with your actual login token

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - pip install --upgrade pip
      - pip install -r requirements.txt  # Install project dependencies
      - pip install pylint  # Install pylint for static code analysis
      # Check if Sonar Scanner is installed, if not, download and install it
      - if [ ! -x "$(command -v sonar-scanner)" ]; then
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip &&
          unzip sonar-scanner-cli-4.6.2.2472-linux.zip &&
          export PATH=$PATH:./sonar-scanner-cli-4.6.2.2472-linux/bin/;
        fi

  pre_build:
    commands:
      - python --version  # Print Python version for verification
      - pylint $CODEBUILD_SRC_DIR/manage.py || true  # Run pylint on manage.py and ignore exit status

  build:
    commands:
      - |
        if [ -z "$Project" ]; then
            echo "Error: SonarCloud project key not found."
            exit 1
        fi
        if [ -z "$Organization" ]; then
            echo "Error: SonarCloud organization key not found."
            exit 1
        fi
        if [ -z "$HOST" ]; then
            echo "Error: SonarCloud host URL not found."
            exit 1
        fi
        if [ -z "$LOGIN" ]; then
            echo "Error: SonarCloud login token not found."
            exit 1
        fi

        sonar-scanner \
            -Dsonar.projectKey="$Project" \
            -Dsonar.organization="$Organization" \
            -Dsonar.host.url="$HOST" \
            -Dsonar.login="$LOGIN" \
            -X

artifacts:
  files:
    - '**/*'  # Include all files in the artifact
